<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="planIT_TestSuite" duration-ms="9361" started-at="2021-05-23T14:14:20Z" finished-at="2021-05-23T14:14:29Z">
    <groups>
    </groups>
    <test name="PlanIT_Tests" duration-ms="9361" started-at="2021-05-23T14:14:20Z" finished-at="2021-05-23T14:14:29Z">
      <class name="planIT.tests.JupiterTests">
        <test-method status="FAIL" signature="onStart()[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="onStart" is-config="true" duration-ms="0" started-at="2021-05-24T00:14:18Z" finished-at="2021-05-24T00:14:18Z">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Unable to delete directory C:\Users\xhhs7\eclipse-workspace\PlanIT\PlanIT\Extentreport.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Unable to delete directory C:\Users\xhhs7\eclipse-workspace\PlanIT\PlanIT\Extentreport.
	at org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1541)
	at planITutils.utils.TestBase.onStart(TestBase.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:298)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onStart -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="initialize" is-config="true" duration-ms="131" started-at="2021-05-24T00:14:20Z" finished-at="2021-05-24T00:14:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="setup" is-config="true" duration-ms="7163" started-at="2021-05-24T00:14:20Z" finished-at="2021-05-24T00:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.mandatoryfieldserror()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1fcb4808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="mandatoryfieldserror()[pri:1, instance:planIT.tests.JupiterTests@64cd705f]" name="mandatoryfieldserror" duration-ms="12" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryfieldserror -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="setup" is-config="true" duration-ms="142" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.successsubmission()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1fcb4808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="successsubmission()[pri:2, instance:planIT.tests.JupiterTests@64cd705f]" name="successsubmission" duration-ms="2" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successsubmission -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="setup" is-config="true" duration-ms="99" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.invaliddatavalidation()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1fcb4808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="invaliddatavalidation()[pri:3, instance:planIT.tests.JupiterTests@64cd705f]" name="invaliddatavalidation" duration-ms="2" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invaliddatavalidation -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="setup" is-config="true" duration-ms="107" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.cartvalidation()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1fcb4808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="cartvalidation()[pri:4, instance:planIT.tests.JupiterTests@64cd705f]" name="cartvalidation" duration-ms="4" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartvalidation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="tearDown" is-config="true" duration-ms="1679" started-at="2021-05-24T00:14:27Z" finished-at="2021-05-24T00:14:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="flushReports" is-config="true" duration-ms="18" started-at="2021-05-24T00:14:29Z" finished-at="2021-05-24T00:14:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="flushReports1()[pri:0, instance:planIT.tests.JupiterTests@64cd705f]" name="flushReports1" is-config="true" duration-ms="16" started-at="2021-05-24T00:14:29Z" finished-at="2021-05-24T00:14:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports1 -->
      </class> <!-- planIT.tests.JupiterTests -->
    </test> <!-- PlanIT_Tests -->
  </suite> <!-- planIT_TestSuite -->
</testng-results>
