<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
    <line>
      <![CDATA[Running First @test to check mandatory fields]]>
    </line>
    <line>
      <![CDATA[Navigating to the Contact Menu]]>
    </line>
    <line>
      <![CDATA[Incorrect details to validate the Error messages]]>
    </line>
    <line>
      <![CDATA[Correct details to validate No Error messages displayed]]>
    </line>
    <line>
      <![CDATA[Running Second @test to check success submission]]>
    </line>
    <line>
      <![CDATA[Navigating to the Contact Menu]]>
    </line>
    <line>
      <![CDATA[Details for the user submitted]]>
    </line>
    <line>
      <![CDATA[Running third @test to check invalid field details]]>
    </line>
    <line>
      <![CDATA[Navigating to the Contact Menu]]>
    </line>
    <line>
      <![CDATA[Invalid details to validate the Error messages]]>
    </line>
    <line>
      <![CDATA[Running fourth @test to check success submission]]>
    </line>
    <line>
      <![CDATA[Navigating to the shop Menu]]>
    </line>
    <line>
      <![CDATA[Adding items to the cart]]>
    </line>
    <line>
      <![CDATA[Validating items in the cart]]>
    </line>
  </reporter-output>
  <suite name="planIT_TestSuite" duration-ms="83031" started-at="2021-05-23T11:56:05Z" finished-at="2021-05-23T11:57:29Z">
    <groups>
    </groups>
    <test name="PlanIT_Tests" duration-ms="83031" started-at="2021-05-23T11:56:05Z" finished-at="2021-05-23T11:57:29Z">
      <class name="planIT.tests.JupiterTests">
        <test-method status="PASS" signature="onStart()[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="onStart" is-config="true" duration-ms="1043" started-at="2021-05-23T21:56:04Z" finished-at="2021-05-23T21:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onStart -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="initialize" is-config="true" duration-ms="157" started-at="2021-05-23T21:56:06Z" finished-at="2021-05-23T21:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="setup" is-config="true" duration-ms="9983" started-at="2021-05-23T21:56:06Z" finished-at="2021-05-23T21:56:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.mandatoryfieldserror()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6399551e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="mandatoryfieldserror()[pri:1, instance:planIT.tests.JupiterTests@30ee2816]" name="mandatoryfieldserror" duration-ms="18953" started-at="2021-05-23T21:56:16Z" finished-at="2021-05-23T21:56:35Z">
          <reporter-output>
            <line>
              <![CDATA[Running First @test to check mandatory fields]]>
            </line>
            <line>
              <![CDATA[Navigating to the Contact Menu]]>
            </line>
            <line>
              <![CDATA[Incorrect details to validate the Error messages]]>
            </line>
            <line>
              <![CDATA[Correct details to validate No Error messages displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- mandatoryfieldserror -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="setup" is-config="true" duration-ms="1033" started-at="2021-05-23T21:56:35Z" finished-at="2021-05-23T21:56:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.successsubmission()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6399551e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="successsubmission()[pri:2, instance:planIT.tests.JupiterTests@30ee2816]" name="successsubmission" duration-ms="6703" started-at="2021-05-23T21:56:36Z" finished-at="2021-05-23T21:56:42Z">
          <reporter-output>
            <line>
              <![CDATA[Running Second @test to check success submission]]>
            </line>
            <line>
              <![CDATA[Navigating to the Contact Menu]]>
            </line>
            <line>
              <![CDATA[Details for the user submitted]]>
            </line>
          </reporter-output>
        </test-method> <!-- successsubmission -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="setup" is-config="true" duration-ms="903" started-at="2021-05-23T21:56:42Z" finished-at="2021-05-23T21:56:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.invaliddatavalidation()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6399551e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="invaliddatavalidation()[pri:3, instance:planIT.tests.JupiterTests@30ee2816]" name="invaliddatavalidation" duration-ms="5158" started-at="2021-05-23T21:56:43Z" finished-at="2021-05-23T21:56:48Z">
          <reporter-output>
            <line>
              <![CDATA[Running third @test to check invalid field details]]>
            </line>
            <line>
              <![CDATA[Navigating to the Contact Menu]]>
            </line>
            <line>
              <![CDATA[Invalid details to validate the Error messages]]>
            </line>
          </reporter-output>
        </test-method> <!-- invaliddatavalidation -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="setup" is-config="true" duration-ms="904" started-at="2021-05-23T21:56:48Z" finished-at="2021-05-23T21:56:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void planIT.tests.JupiterTests.cartvalidation()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6399551e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="cartvalidation()[pri:4, instance:planIT.tests.JupiterTests@30ee2816]" name="cartvalidation" duration-ms="37964" started-at="2021-05-23T21:56:49Z" finished-at="2021-05-23T21:57:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at planIT.pages.JupiterPages.validatecart(JupiterPages.java:198)
	at planIT.tests.JupiterTests.cartvalidation(JupiterTests.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Running fourth @test to check success submission]]>
            </line>
            <line>
              <![CDATA[Navigating to the shop Menu]]>
            </line>
            <line>
              <![CDATA[Adding items to the cart]]>
            </line>
            <line>
              <![CDATA[Validating items in the cart]]>
            </line>
          </reporter-output>
        </test-method> <!-- cartvalidation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="tearDown" is-config="true" duration-ms="1248" started-at="2021-05-23T21:57:27Z" finished-at="2021-05-23T21:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:planIT.tests.JupiterTests@30ee2816]" name="flushReports" is-config="true" duration-ms="17" started-at="2021-05-23T21:57:29Z" finished-at="2021-05-23T21:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- planIT.tests.JupiterTests -->
    </test> <!-- PlanIT_Tests -->
  </suite> <!-- planIT_TestSuite -->
</testng-results>
